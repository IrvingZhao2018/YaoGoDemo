package com.yaogo.demo.controller;

import com.yaogo.demo.entities.Message;
import com.yaogo.demo.entities.User;
import com.yaogo.demo.repository.MessageRepository;
import com.yaogo.demo.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/messages") // This means URL's start with /demo (after Application path)
public class MessageController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MessageRepository messageRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewMessage(@RequestParam String msg_data) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Message msg = new Message();
        msg.setMsg_data(msg_data);
        messageRepository.save(msg);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Message> getAllUsers() {
        // This returns a JSON or XML with the users
        return messageRepository.findAll();
    }
}
